1 this的指向，在函数被调用时确定。也就是执行上下文被创建时确定的。

2 函数执行过程中，this一旦被确定，就不可更改了。

3 全局环境中的this：
	指向全局对象本身。

4 函数中的this：
	在一个函数上下文中，this由调用者提供，由调用函数的方式来决定。如果调用者函数，被某一个对象所拥有，那么该函数在调用时，内部的this指向该对象。如果函数独立调用，那么该函数内部的this指向undefined。但是在非严格模式中，当this指向undefined时，它会被自动指向全局对象。

5 call,apply显式指定this
	5.1call/apply的应用场景：
		5.1.1将类数组对象转换为数组
		5.1.2 根据自己的需要灵活修改this指向
		5.1.3 实现继承
		5.1.4 在向其他执行上下文的传递中，确保this的指向保持不变
		
6 构造函数与原型方法上的this：
	6.1 用new操作符调用构造函数时，this指向new所创建的对象。通过new操作符调用构造函数会经历以下4个阶段（也是this这样指向的理由）：
		6.1.1 创建一个新的对象
		6.1.2 将构造函数的this指向这个新对象
		6.1.3 指向构造函数的代码，为这个对象添加属性，方法等
		6.1.4 返回新对象
	6.2 原型方法上的this，可以根据函数中this的定义来确定	
		
	